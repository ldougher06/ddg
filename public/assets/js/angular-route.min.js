/*
 AngularJS v1.4.7
 (c) 2010-2015 Google, Inc. http://angularjs.org
 License: MIT
*/
"use strict";

(function (p, c, C) {
  'use strict';function v(r, h, g) {
    return { restrict: "ECA", terminal: !0, priority: 400, transclude: "element", link: function link(a, f, b, d, y) {
        function z() {
          k && (g.cancel(k), k = null);l && (l.$destroy(), l = null);m && (k = g.leave(m), k.then(function () {
            k = null;
          }), m = null);
        }function x() {
          var b = r.current && r.current.locals;if (c.isDefined(b && b.$template)) {
            var b = a.$new(),
                d = r.current;m = y(b, function (b) {
              g.enter(b, null, m || f).then(function () {
                !c.isDefined(t) || t && !a.$eval(t) || h();
              });z();
            });l = d.scope = b;l.$emit("$viewContentLoaded");
            l.$eval(w);
          } else z();
        }var l,
            m,
            k,
            t = b.autoscroll,
            w = b.onload || "";a.$on("$routeChangeSuccess", x);x();
      } };
  }function A(c, h, g) {
    return { restrict: "ECA", priority: -400, link: function link(a, f) {
        var b = g.current,
            d = b.locals;f.html(d.$template);var y = c(f.contents());b.controller && (d.$scope = a, d = h(b.controller, d), b.controllerAs && (a[b.controllerAs] = d), f.data("$ngControllerController", d), f.children().data("$ngControllerController", d));y(a);
      } };
  }p = c.module("ngRoute", ["ng"]).provider("$route", function () {
    function r(a, f) {
      return c.extend(Object.create(a), f);
    }function h(a, c) {
      var b = c.caseInsensitiveMatch,
          d = { originalPath: a, regexp: a },
          g = d.keys = [];a = a.replace(/([().])/g, "\\$1").replace(/(\/)?:(\w+)([\?\*])?/g, function (a, c, b, d) {
        a = "?" === d ? d : null;d = "*" === d ? d : null;g.push({ name: b, optional: !!a });c = c || "";return "" + (a ? "" : c) + "(?:" + (a ? c : "") + (d && "(.+?)" || "([^/]+)") + (a || "") + ")" + (a || "");
      }).replace(/([\/$\*])/g, "\\$1");d.regexp = new RegExp("^" + a + "$", b ? "i" : "");return d;
    }var g = {};this.when = function (a, f) {
      var b = c.copy(f);c.isUndefined(b.reloadOnSearch) && (b.reloadOnSearch = !0);
      c.isUndefined(b.caseInsensitiveMatch) && (b.caseInsensitiveMatch = this.caseInsensitiveMatch);g[a] = c.extend(b, a && h(a, b));if (a) {
        var d = "/" == a[a.length - 1] ? a.substr(0, a.length - 1) : a + "/";g[d] = c.extend({ redirectTo: a }, h(d, b));
      }return this;
    };this.caseInsensitiveMatch = !1;this.otherwise = function (a) {
      "string" === typeof a && (a = { redirectTo: a });this.when(null, a);return this;
    };this.$get = ["$rootScope", "$location", "$routeParams", "$q", "$injector", "$templateRequest", "$sce", function (a, f, b, d, h, p, x) {
      function l(b) {
        var e = s.current;
        (v = (n = k()) && e && n.$$route === e.$$route && c.equals(n.pathParams, e.pathParams) && !n.reloadOnSearch && !w) || !e && !n || a.$broadcast("$routeChangeStart", n, e).defaultPrevented && b && b.preventDefault();
      }function m() {
        var u = s.current,
            e = n;if (v) u.params = e.params, c.copy(u.params, b), a.$broadcast("$routeUpdate", u);else if (e || u) w = !1, (s.current = e) && e.redirectTo && (c.isString(e.redirectTo) ? f.path(t(e.redirectTo, e.params)).search(e.params).replace() : f.url(e.redirectTo(e.pathParams, f.path(), f.search())).replace()), d.when(e).then(function () {
          if (e) {
            var a = c.extend({}, e.resolve),
                b,
                f;c.forEach(a, function (b, e) {
              a[e] = c.isString(b) ? h.get(b) : h.invoke(b, null, null, e);
            });c.isDefined(b = e.template) ? c.isFunction(b) && (b = b(e.params)) : c.isDefined(f = e.templateUrl) && (c.isFunction(f) && (f = f(e.params)), c.isDefined(f) && (e.loadedTemplateUrl = x.valueOf(f), b = p(f)));c.isDefined(b) && (a.$template = b);return d.all(a);
          }
        }).then(function (f) {
          e == s.current && (e && (e.locals = f, c.copy(e.params, b)), a.$broadcast("$routeChangeSuccess", e, u));
        }, function (b) {
          e == s.current && a.$broadcast("$routeChangeError", e, u, b);
        });
      }function k() {
        var a, b;c.forEach(g, function (d, g) {
          var q;if (q = !b) {
            var h = f.path();q = d.keys;var l = {};if (d.regexp) if (h = d.regexp.exec(h)) {
              for (var k = 1, m = h.length; k < m; ++k) {
                var n = q[k - 1],
                    p = h[k];n && p && (l[n.name] = p);
              }q = l;
            } else q = null;else q = null;q = a = q;
          }q && (b = r(d, { params: c.extend({}, f.search(), a), pathParams: a }), b.$$route = d);
        });return b || g[null] && r(g[null], { params: {}, pathParams: {} });
      }function t(a, b) {
        var d = [];c.forEach((a || "").split(":"), function (a, c) {
          if (0 === c) d.push(a);else {
            var f = a.match(/(\w+)(?:[?*])?(.*)/),
                g = f[1];d.push(b[g]);d.push(f[2] || "");delete b[g];
          }
        });return d.join("");
      }var w = !1,
          n,
          v,
          s = { routes: g, reload: function reload() {
          w = !0;a.$evalAsync(function () {
            l();m();
          });
        }, updateParams: function updateParams(a) {
          if (this.current && this.current.$$route) a = c.extend({}, this.current.params, a), f.path(t(this.current.$$route.originalPath, a)), f.search(a);else throw B("norout");
        } };a.$on("$locationChangeStart", l);a.$on("$locationChangeSuccess", m);return s;
    }];
  });var B = c.$$minErr("ngRoute");p.provider("$routeParams", function () {
    this.$get = function () {
      return {};
    };
  });
  p.directive("ngView", v);p.directive("ngView", A);v.$inject = ["$route", "$anchorScroll", "$animate"];A.$inject = ["$compile", "$controller", "$route"];
})(window, window.angular);
//# sourceMappingURL=angular-route.min.js.map
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hc3NldHMvanMvYW5ndWxhci1yb3V0ZS5taW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUtBLENBQUMsVUFBUyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLGNBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLFdBQU0sRUFBQyxRQUFRLEVBQUMsS0FBSyxFQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMsRUFBQyxRQUFRLEVBQUMsR0FBRyxFQUFDLFVBQVUsRUFBQyxTQUFTLEVBQUMsSUFBSSxFQUFDLGNBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLGlCQUFTLENBQUMsR0FBRTtBQUFDLFdBQUMsS0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxJQUFJLENBQUEsQUFBQyxDQUFDLENBQUMsS0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQSxBQUFDLENBQUMsQ0FBQyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBVTtBQUFDLGFBQUMsR0FBQyxJQUFJLENBQUE7V0FBQyxDQUFDLEVBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQSxBQUFDLENBQUE7U0FBQyxTQUFTLENBQUMsR0FBRTtBQUFDLGNBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxPQUFPLElBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBRyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLEVBQUM7QUFBQyxnQkFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLElBQUksRUFBRTtnQkFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxVQUFTLENBQUMsRUFBQztBQUFDLGVBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFDLElBQUksRUFBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVU7QUFBQyxpQkFBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUMsSUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUUsQ0FBQyxFQUFFLENBQUE7ZUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUE7YUFBQyxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUN2ZixhQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFBO1dBQUMsTUFBSyxDQUFDLEVBQUUsQ0FBQTtTQUFDLElBQUksQ0FBQztZQUFDLENBQUM7WUFBQyxDQUFDO1lBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxVQUFVO1lBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLElBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMscUJBQXFCLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUE7T0FBQyxFQUFDLENBQUE7R0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLFdBQU0sRUFBQyxRQUFRLEVBQUMsS0FBSyxFQUFDLFFBQVEsRUFBQyxDQUFDLEdBQUcsRUFBQyxJQUFJLEVBQUMsY0FBUyxDQUFDLEVBQUMsQ0FBQyxFQUFDO0FBQUMsWUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLE9BQU87WUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsS0FBRyxDQUFDLENBQUMsTUFBTSxHQUFDLENBQUMsRUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFlBQVksS0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxHQUFDLENBQUMsQ0FBQSxBQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx5QkFBeUIsRUFBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsSUFBSSxDQUFDLHlCQUF5QixFQUFDLENBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7T0FBQyxFQUFDLENBQUE7R0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUMsWUFBVTtBQUFDLGFBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxhQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFDeGdCLENBQUMsQ0FBQyxDQUFBO0tBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLFVBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxvQkFBb0I7VUFBQyxDQUFDLEdBQUMsRUFBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUM7VUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLElBQUksR0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyx1QkFBdUIsRUFBQyxVQUFTLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLFNBQUMsR0FBQyxHQUFHLEtBQUcsQ0FBQyxHQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFDLEdBQUcsS0FBRyxDQUFDLEdBQUMsQ0FBQyxHQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUMsSUFBSSxFQUFDLENBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsSUFBRSxFQUFFLENBQUMsT0FBTSxFQUFFLElBQUUsQ0FBQyxHQUFDLEVBQUUsR0FBQyxDQUFDLENBQUEsQUFBQyxHQUFDLEtBQUssSUFBRSxDQUFDLEdBQUMsQ0FBQyxHQUFDLEVBQUUsQ0FBQSxBQUFDLElBQUUsQ0FBQyxJQUFFLE9BQU8sSUFBRSxTQUFTLENBQUEsQUFBQyxJQUFFLENBQUMsSUFBRSxFQUFFLENBQUEsQUFBQyxHQUFDLEdBQUcsSUFBRSxDQUFDLElBQUUsRUFBRSxDQUFBLEFBQUMsQ0FBQTtPQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUMsSUFBSSxNQUFNLENBQUMsR0FBRyxHQUFDLENBQUMsR0FBQyxHQUFHLEVBQUMsQ0FBQyxHQUFDLEdBQUcsR0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQTtLQUFDLElBQUksQ0FBQyxHQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFDLFVBQVMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLFVBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLEtBQUcsQ0FBQyxDQUFDLGNBQWMsR0FBQyxDQUFDLENBQUMsQ0FBQSxBQUFDLENBQUM7QUFDdGYsT0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsb0JBQW9CLENBQUMsS0FBRyxDQUFDLENBQUMsb0JBQW9CLEdBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFBLEFBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUMsQ0FBQyxJQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFHLENBQUMsRUFBQztBQUFDLFlBQUksQ0FBQyxHQUFDLEdBQUcsSUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsR0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO09BQUMsT0FBTyxJQUFJLENBQUE7S0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsR0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFDLFVBQVMsQ0FBQyxFQUFDO0FBQUMsY0FBUSxLQUFHLE9BQU8sQ0FBQyxLQUFHLENBQUMsR0FBQyxFQUFDLFVBQVUsRUFBQyxDQUFDLEVBQUMsQ0FBQSxBQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUE7S0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUMsQ0FBQyxZQUFZLEVBQUMsV0FBVyxFQUFDLGNBQWMsRUFBQyxJQUFJLEVBQUMsV0FBVyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sRUFBQyxVQUFTLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLGVBQVMsQ0FBQyxDQUFDLENBQUMsRUFBQztBQUFDLFlBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7QUFDdGYsU0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxFQUFFLENBQUEsSUFBRyxDQUFDLElBQUUsQ0FBQyxDQUFDLE9BQU8sS0FBRyxDQUFDLENBQUMsT0FBTyxJQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBQyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUUsQ0FBQyxDQUFDLENBQUMsY0FBYyxJQUFFLENBQUMsQ0FBQyxDQUFBLElBQUcsQ0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLElBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxtQkFBbUIsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLElBQUUsQ0FBQyxJQUFFLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQTtPQUFDLFNBQVMsQ0FBQyxHQUFFO0FBQUMsWUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLE9BQU87WUFBQyxDQUFDLEdBQUMsQ0FBQyxDQUFDLElBQUcsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFHLENBQUMsSUFBRSxDQUFDLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sR0FBQyxDQUFDLENBQUEsSUFBRyxDQUFDLENBQUMsVUFBVSxLQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUUsR0FBQyxDQUFD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QUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFDO0FBQUMsbUJBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsTUFBTSxFQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsRUFBRSxDQUFDLEVBQUM7QUFBQyxvQkFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUM7b0JBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUUsQ0FBQyxLQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFBLEFBQUMsQ0FBQTtlQUFDLENBQUMsR0FBQyxDQUFDLENBQUE7YUFBQyxNQUFLLENBQUMsR0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUMsSUFBSSxDQUFDLENBQUMsR0FBQyxDQUFDLEdBQUMsQ0FBQyxDQUFBO1dBQUMsQ0FBQyxLQUFHLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBQyxDQUFDLENBQUMsRUFBQyxVQUFVLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsT0FBTyxHQUFDLENBQUMsQ0FBQSxBQUFDLENBQUE7U0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUMsRUFBQyxNQUFNLEVBQUMsRUFBRSxFQUFDLFVBQVUsRUFBQyxFQUFFLEVBQUMsQ0FBQyxDQUFBO09BQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQztBQUFDLFlBQUksQ0FBQyxHQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFFLEVBQUUsQ0FBQSxDQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBQyxVQUFTLENBQUMsRUFBQyxDQUFDLEVBQUM7QUFBQyxjQUFHLENBQUMsS0FBRyxDQUFDLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFJO0FBQUMsZ0JBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsb0JBQW9CLENBQUM7Z0JBQ3RmLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBRSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtXQUFDO1NBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQTtPQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQztVQUFDLENBQUM7VUFBQyxDQUFDO1VBQUMsQ0FBQyxHQUFDLEVBQUMsTUFBTSxFQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsa0JBQVU7QUFBQyxXQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxZQUFVO0FBQUMsYUFBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUE7V0FBQyxDQUFDLENBQUE7U0FBQyxFQUFDLFlBQVksRUFBQyxzQkFBUyxDQUFDLEVBQUM7QUFBQyxjQUFHLElBQUksQ0FBQyxPQUFPLElBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxNQUFNLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLHNCQUFzQixFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsd0JBQXdCLEVBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUE7S0FBQyxDQUFDLENBQUE7R0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBQyxZQUFVO0FBQUMsUUFBSSxDQUFDLElBQUksR0FBQyxZQUFVO0FBQUMsYUFBTSxFQUFFLENBQUE7S0FBQyxDQUFBO0dBQUMsQ0FBQyxDQUFDO0FBQ25nQixHQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxHQUFDLENBQUMsUUFBUSxFQUFDLGVBQWUsRUFBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxHQUFDLENBQUMsVUFBVSxFQUFDLGFBQWEsRUFBQyxRQUFRLENBQUMsQ0FBQTtDQUFDLENBQUEsQ0FBRSxNQUFNLEVBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDIiwiZmlsZSI6ImFuZ3VsYXItcm91dGUubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiBBbmd1bGFySlMgdjEuNC43XG4gKGMpIDIwMTAtMjAxNSBHb29nbGUsIEluYy4gaHR0cDovL2FuZ3VsYXJqcy5vcmdcbiBMaWNlbnNlOiBNSVRcbiovXG4oZnVuY3Rpb24ocCxjLEMpeyd1c2Ugc3RyaWN0JztmdW5jdGlvbiB2KHIsaCxnKXtyZXR1cm57cmVzdHJpY3Q6XCJFQ0FcIix0ZXJtaW5hbDohMCxwcmlvcml0eTo0MDAsdHJhbnNjbHVkZTpcImVsZW1lbnRcIixsaW5rOmZ1bmN0aW9uKGEsZixiLGQseSl7ZnVuY3Rpb24geigpe2smJihnLmNhbmNlbChrKSxrPW51bGwpO2wmJihsLiRkZXN0cm95KCksbD1udWxsKTttJiYoaz1nLmxlYXZlKG0pLGsudGhlbihmdW5jdGlvbigpe2s9bnVsbH0pLG09bnVsbCl9ZnVuY3Rpb24geCgpe3ZhciBiPXIuY3VycmVudCYmci5jdXJyZW50LmxvY2FscztpZihjLmlzRGVmaW5lZChiJiZiLiR0ZW1wbGF0ZSkpe3ZhciBiPWEuJG5ldygpLGQ9ci5jdXJyZW50O209eShiLGZ1bmN0aW9uKGIpe2cuZW50ZXIoYixudWxsLG18fGYpLnRoZW4oZnVuY3Rpb24oKXshYy5pc0RlZmluZWQodCl8fHQmJiFhLiRldmFsKHQpfHxoKCl9KTt6KCl9KTtsPWQuc2NvcGU9YjtsLiRlbWl0KFwiJHZpZXdDb250ZW50TG9hZGVkXCIpO1xubC4kZXZhbCh3KX1lbHNlIHooKX12YXIgbCxtLGssdD1iLmF1dG9zY3JvbGwsdz1iLm9ubG9hZHx8XCJcIjthLiRvbihcIiRyb3V0ZUNoYW5nZVN1Y2Nlc3NcIix4KTt4KCl9fX1mdW5jdGlvbiBBKGMsaCxnKXtyZXR1cm57cmVzdHJpY3Q6XCJFQ0FcIixwcmlvcml0eTotNDAwLGxpbms6ZnVuY3Rpb24oYSxmKXt2YXIgYj1nLmN1cnJlbnQsZD1iLmxvY2FscztmLmh0bWwoZC4kdGVtcGxhdGUpO3ZhciB5PWMoZi5jb250ZW50cygpKTtiLmNvbnRyb2xsZXImJihkLiRzY29wZT1hLGQ9aChiLmNvbnRyb2xsZXIsZCksYi5jb250cm9sbGVyQXMmJihhW2IuY29udHJvbGxlckFzXT1kKSxmLmRhdGEoXCIkbmdDb250cm9sbGVyQ29udHJvbGxlclwiLGQpLGYuY2hpbGRyZW4oKS5kYXRhKFwiJG5nQ29udHJvbGxlckNvbnRyb2xsZXJcIixkKSk7eShhKX19fXA9Yy5tb2R1bGUoXCJuZ1JvdXRlXCIsW1wibmdcIl0pLnByb3ZpZGVyKFwiJHJvdXRlXCIsZnVuY3Rpb24oKXtmdW5jdGlvbiByKGEsZil7cmV0dXJuIGMuZXh0ZW5kKE9iamVjdC5jcmVhdGUoYSksXG5mKX1mdW5jdGlvbiBoKGEsYyl7dmFyIGI9Yy5jYXNlSW5zZW5zaXRpdmVNYXRjaCxkPXtvcmlnaW5hbFBhdGg6YSxyZWdleHA6YX0sZz1kLmtleXM9W107YT1hLnJlcGxhY2UoLyhbKCkuXSkvZyxcIlxcXFwkMVwiKS5yZXBsYWNlKC8oXFwvKT86KFxcdyspKFtcXD9cXCpdKT8vZyxmdW5jdGlvbihhLGMsYixkKXthPVwiP1wiPT09ZD9kOm51bGw7ZD1cIipcIj09PWQ/ZDpudWxsO2cucHVzaCh7bmFtZTpiLG9wdGlvbmFsOiEhYX0pO2M9Y3x8XCJcIjtyZXR1cm5cIlwiKyhhP1wiXCI6YykrXCIoPzpcIisoYT9jOlwiXCIpKyhkJiZcIiguKz8pXCJ8fFwiKFteL10rKVwiKSsoYXx8XCJcIikrXCIpXCIrKGF8fFwiXCIpfSkucmVwbGFjZSgvKFtcXC8kXFwqXSkvZyxcIlxcXFwkMVwiKTtkLnJlZ2V4cD1uZXcgUmVnRXhwKFwiXlwiK2ErXCIkXCIsYj9cImlcIjpcIlwiKTtyZXR1cm4gZH12YXIgZz17fTt0aGlzLndoZW49ZnVuY3Rpb24oYSxmKXt2YXIgYj1jLmNvcHkoZik7Yy5pc1VuZGVmaW5lZChiLnJlbG9hZE9uU2VhcmNoKSYmKGIucmVsb2FkT25TZWFyY2g9ITApO1xuYy5pc1VuZGVmaW5lZChiLmNhc2VJbnNlbnNpdGl2ZU1hdGNoKSYmKGIuY2FzZUluc2Vuc2l0aXZlTWF0Y2g9dGhpcy5jYXNlSW5zZW5zaXRpdmVNYXRjaCk7Z1thXT1jLmV4dGVuZChiLGEmJmgoYSxiKSk7aWYoYSl7dmFyIGQ9XCIvXCI9PWFbYS5sZW5ndGgtMV0/YS5zdWJzdHIoMCxhLmxlbmd0aC0xKTphK1wiL1wiO2dbZF09Yy5leHRlbmQoe3JlZGlyZWN0VG86YX0saChkLGIpKX1yZXR1cm4gdGhpc307dGhpcy5jYXNlSW5zZW5zaXRpdmVNYXRjaD0hMTt0aGlzLm90aGVyd2lzZT1mdW5jdGlvbihhKXtcInN0cmluZ1wiPT09dHlwZW9mIGEmJihhPXtyZWRpcmVjdFRvOmF9KTt0aGlzLndoZW4obnVsbCxhKTtyZXR1cm4gdGhpc307dGhpcy4kZ2V0PVtcIiRyb290U2NvcGVcIixcIiRsb2NhdGlvblwiLFwiJHJvdXRlUGFyYW1zXCIsXCIkcVwiLFwiJGluamVjdG9yXCIsXCIkdGVtcGxhdGVSZXF1ZXN0XCIsXCIkc2NlXCIsZnVuY3Rpb24oYSxmLGIsZCxoLHAseCl7ZnVuY3Rpb24gbChiKXt2YXIgZT1zLmN1cnJlbnQ7XG4odj0obj1rKCkpJiZlJiZuLiQkcm91dGU9PT1lLiQkcm91dGUmJmMuZXF1YWxzKG4ucGF0aFBhcmFtcyxlLnBhdGhQYXJhbXMpJiYhbi5yZWxvYWRPblNlYXJjaCYmIXcpfHwhZSYmIW58fGEuJGJyb2FkY2FzdChcIiRyb3V0ZUNoYW5nZVN0YXJ0XCIsbixlKS5kZWZhdWx0UHJldmVudGVkJiZiJiZiLnByZXZlbnREZWZhdWx0KCl9ZnVuY3Rpb24gbSgpe3ZhciB1PXMuY3VycmVudCxlPW47aWYodil1LnBhcmFtcz1lLnBhcmFtcyxjLmNvcHkodS5wYXJhbXMsYiksYS4kYnJvYWRjYXN0KFwiJHJvdXRlVXBkYXRlXCIsdSk7ZWxzZSBpZihlfHx1KXc9ITEsKHMuY3VycmVudD1lKSYmZS5yZWRpcmVjdFRvJiYoYy5pc1N0cmluZyhlLnJlZGlyZWN0VG8pP2YucGF0aCh0KGUucmVkaXJlY3RUbyxlLnBhcmFtcykpLnNlYXJjaChlLnBhcmFtcykucmVwbGFjZSgpOmYudXJsKGUucmVkaXJlY3RUbyhlLnBhdGhQYXJhbXMsZi5wYXRoKCksZi5zZWFyY2goKSkpLnJlcGxhY2UoKSksZC53aGVuKGUpLnRoZW4oZnVuY3Rpb24oKXtpZihlKXt2YXIgYT1cbmMuZXh0ZW5kKHt9LGUucmVzb2x2ZSksYixmO2MuZm9yRWFjaChhLGZ1bmN0aW9uKGIsZSl7YVtlXT1jLmlzU3RyaW5nKGIpP2guZ2V0KGIpOmguaW52b2tlKGIsbnVsbCxudWxsLGUpfSk7Yy5pc0RlZmluZWQoYj1lLnRlbXBsYXRlKT9jLmlzRnVuY3Rpb24oYikmJihiPWIoZS5wYXJhbXMpKTpjLmlzRGVmaW5lZChmPWUudGVtcGxhdGVVcmwpJiYoYy5pc0Z1bmN0aW9uKGYpJiYoZj1mKGUucGFyYW1zKSksYy5pc0RlZmluZWQoZikmJihlLmxvYWRlZFRlbXBsYXRlVXJsPXgudmFsdWVPZihmKSxiPXAoZikpKTtjLmlzRGVmaW5lZChiKSYmKGEuJHRlbXBsYXRlPWIpO3JldHVybiBkLmFsbChhKX19KS50aGVuKGZ1bmN0aW9uKGYpe2U9PXMuY3VycmVudCYmKGUmJihlLmxvY2Fscz1mLGMuY29weShlLnBhcmFtcyxiKSksYS4kYnJvYWRjYXN0KFwiJHJvdXRlQ2hhbmdlU3VjY2Vzc1wiLGUsdSkpfSxmdW5jdGlvbihiKXtlPT1zLmN1cnJlbnQmJmEuJGJyb2FkY2FzdChcIiRyb3V0ZUNoYW5nZUVycm9yXCIsXG5lLHUsYil9KX1mdW5jdGlvbiBrKCl7dmFyIGEsYjtjLmZvckVhY2goZyxmdW5jdGlvbihkLGcpe3ZhciBxO2lmKHE9IWIpe3ZhciBoPWYucGF0aCgpO3E9ZC5rZXlzO3ZhciBsPXt9O2lmKGQucmVnZXhwKWlmKGg9ZC5yZWdleHAuZXhlYyhoKSl7Zm9yKHZhciBrPTEsbT1oLmxlbmd0aDtrPG07KytrKXt2YXIgbj1xW2stMV0scD1oW2tdO24mJnAmJihsW24ubmFtZV09cCl9cT1sfWVsc2UgcT1udWxsO2Vsc2UgcT1udWxsO3E9YT1xfXEmJihiPXIoZCx7cGFyYW1zOmMuZXh0ZW5kKHt9LGYuc2VhcmNoKCksYSkscGF0aFBhcmFtczphfSksYi4kJHJvdXRlPWQpfSk7cmV0dXJuIGJ8fGdbbnVsbF0mJnIoZ1tudWxsXSx7cGFyYW1zOnt9LHBhdGhQYXJhbXM6e319KX1mdW5jdGlvbiB0KGEsYil7dmFyIGQ9W107Yy5mb3JFYWNoKChhfHxcIlwiKS5zcGxpdChcIjpcIiksZnVuY3Rpb24oYSxjKXtpZigwPT09YylkLnB1c2goYSk7ZWxzZXt2YXIgZj1hLm1hdGNoKC8oXFx3KykoPzpbPypdKT8oLiopLyksXG5nPWZbMV07ZC5wdXNoKGJbZ10pO2QucHVzaChmWzJdfHxcIlwiKTtkZWxldGUgYltnXX19KTtyZXR1cm4gZC5qb2luKFwiXCIpfXZhciB3PSExLG4sdixzPXtyb3V0ZXM6ZyxyZWxvYWQ6ZnVuY3Rpb24oKXt3PSEwO2EuJGV2YWxBc3luYyhmdW5jdGlvbigpe2woKTttKCl9KX0sdXBkYXRlUGFyYW1zOmZ1bmN0aW9uKGEpe2lmKHRoaXMuY3VycmVudCYmdGhpcy5jdXJyZW50LiQkcm91dGUpYT1jLmV4dGVuZCh7fSx0aGlzLmN1cnJlbnQucGFyYW1zLGEpLGYucGF0aCh0KHRoaXMuY3VycmVudC4kJHJvdXRlLm9yaWdpbmFsUGF0aCxhKSksZi5zZWFyY2goYSk7ZWxzZSB0aHJvdyBCKFwibm9yb3V0XCIpO319O2EuJG9uKFwiJGxvY2F0aW9uQ2hhbmdlU3RhcnRcIixsKTthLiRvbihcIiRsb2NhdGlvbkNoYW5nZVN1Y2Nlc3NcIixtKTtyZXR1cm4gc31dfSk7dmFyIEI9Yy4kJG1pbkVycihcIm5nUm91dGVcIik7cC5wcm92aWRlcihcIiRyb3V0ZVBhcmFtc1wiLGZ1bmN0aW9uKCl7dGhpcy4kZ2V0PWZ1bmN0aW9uKCl7cmV0dXJue319fSk7XG5wLmRpcmVjdGl2ZShcIm5nVmlld1wiLHYpO3AuZGlyZWN0aXZlKFwibmdWaWV3XCIsQSk7di4kaW5qZWN0PVtcIiRyb3V0ZVwiLFwiJGFuY2hvclNjcm9sbFwiLFwiJGFuaW1hdGVcIl07QS4kaW5qZWN0PVtcIiRjb21waWxlXCIsXCIkY29udHJvbGxlclwiLFwiJHJvdXRlXCJdfSkod2luZG93LHdpbmRvdy5hbmd1bGFyKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFuZ3VsYXItcm91dGUubWluLmpzLm1hcFxuIl19
